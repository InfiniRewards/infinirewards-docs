name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Modify next.config.mjs for Cloudflare compatibility
        run: |
          if [ -f "next.config.mjs" ]; then
            CONFIG_FILE="next.config.mjs"
          elif [ -f "next.config.js" ]; then
            CONFIG_FILE="next.config.js"
          else
            echo "No next.config.js or next.config.mjs found, creating one"
            CONFIG_FILE="next.config.js"
            echo "module.exports = {}" > $CONFIG_FILE
          fi
          
          # Backup the original config
          cp $CONFIG_FILE ${CONFIG_FILE}.backup
          
          # Create config with edge runtime for Cloudflare
          cat > $CONFIG_FILE << EOL
          /** @type {import('next').NextConfig} */
          
          const nextConfig = {
            reactStrictMode: true,
            experimental: {
              serverActions: {
                allowedOrigins: ["localhost:3000", "infinirewards-docs.pages.dev"],
              },
            },
            // Force all pages to be compiled with the Edge Runtime
            experimental: {
              runtime: 'edge',
              serverComponents: true,
            },
          }
          
          export default nextConfig
          EOL

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1

      - name: Create _routes.json file for Cloudflare Pages
        run: |
          mkdir -p .next/static
          cat > .next/_routes.json << EOL
          {
            "version": 1,
            "include": ["/*"],
            "exclude": ["/build/*", "/static/*"]
          }
          EOL

      - name: Install Wrangler
        run: npm install -g wrangler@latest

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler pages deploy .next --project-name=infinirewards-docs
